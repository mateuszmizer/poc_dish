tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.3.0/types.yaml

inputs:

  submanager_deployment_id:
    type: string
    default: 483032d2-bf86-437f-8bb8-7f6f58f3ab0a


deployment_settings:
  default_schedules:
    refresh:
      workflow: execute_operation
      since: '+15min'
      recurrence: '15min'
      workflow_parameters:
        operation: cloudify.interfaces.lifecycle.start
        node_ids: [policy_temp]

node_templates:

  submanager:
    type: cloudify.nodes.SharedResource
    properties:
      resource_config:
        deployment:
          id: { get_input: submanager_deployment_id }

  k8s:
    type: cloudify.nodes.SharedResource
    properties:
      resource_config:
        deployment:
          id: { get_attribute: [ submanager, capabilities, related_kubernetes_deployment_id ] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: submanager

  # policy_temp:
  
  #   type: cloudify.nodes.Root
  #   interfaces:
  #     cloudify.interfaces.lifecycle:
  #       start:
  #         implementation: scripts/policy.py
  #         executor: central_deployment_agent
  #         inputs:
  #           cluster_host: { get_attribute: [ k8s, capabilities, kubernetes_cluster_host ] }
  #           cluster_name: { get_attribute: [ k8s, capabilities, kubernetes_cluster_name ] }
  #           region: { get_attribute: [ k8s, capabilities, region ] }
  #           rg_id: { get_attribute: [ k8s, capabilities, rg_id ] }
  #           aks_id: { get_attribute: [ k8s, capabilities, aks_id ] }
  #           kube_config: { get_secret: kubeconfig }
  #           deployment_id: { get_input: submanager_deployment_id }
  #   relationships:
  #   - type: cloudify.relationships.depends_on
  #     target: k8s

# node_templates:
  infrastructure:
    type: cloudify.nodes.Component
    properties:
      client:
        host: { get_environment_capability: cloudify_manager_endpoint }
        username: admin
        password: admin
        tenant: default_tenant
        port: 80
        protocol: 'http'
      resource_config:
        blueprint:
          main_file_name: 'policy.yaml'
          external_resource: false
          blueprint_archive: https://github.com/mateuszmizer/poc_dish/raw/main/policy.zip
        deployment:
          inputs:
            cluster_host: { get_attribute: [ k8s, capabilities, kubernetes_cluster_host ] }
            cluster_name: { get_attribute: [ k8s, capabilities, kubernetes_cluster_name ] }
            region: { get_attribute: [ k8s, capabilities, region ] }
            rg_id: { get_attribute: [ k8s, capabilities, rg_id ] }
            aks_id: { get_attribute: [ k8s, capabilities, aks_id ] }
            # deployment_id: { get_input: submanager_deployment_id }
    relationships:
    - type: cloudify.relationships.depends_on
      target: k8s

capabilities:
  SLA:
    value: value: { get_attribute: [ infrastructure,  SLA_POLICY ] }