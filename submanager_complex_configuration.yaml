tosca_definitions_version: cloudify_dsl_1_4

imports:
  - https://cloudify.co/spec/cloudify/6.4.0.dev1/types.yaml
  - plugin:cloudify-kubernetes-plugin?version===2.13.9

inputs:

  k8s_deployment_id:
    type: deployment_id
    constraints:
    - labels:
      - csys-obj-type: environment

# imports:
#   - https://cloudify.co/spec/cloudify/6.3.0/types.yaml
#   - plugin:cloudify-kubernetes-plugin?version===2.13.9

# inputs:

#   k8s_deployment_id:
#     type: string
#     default: 85cbb865-19f3-43b7-9f63-ed12b849d381

node_templates:
  
  k8s:
    type: cloudify.nodes.SharedResource
    properties:
      resource_config:
        deployment:
          id: { get_attribute: k8s_deployment_id }

  kubeconfig_storager:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          main_file_name: 'blueprint.yaml'
          external_resource: false
          blueprint_archive: https://github.com/mateuszmizer/poc_dish/raw/main/kubeconfig_storager.zip
        deployment:
          inputs: 
            k8s_deployment_id: { get_input: k8s_deployment_id }

  nfd_feature:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          main_file_name: 'main.yaml'
          external_resource: false
          blueprint_archive: https://github.com/mateuszmizer/poc_dish/raw/main/nfd-blueprint.zip
        deployment:
          inputs: 
            k8s_deployment_id: { get_input: k8s_deployment_id }
    relationships:
      - type: cloudify.relationships.depends_on
        target: kubeconfig_storager
  
  submanager:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint:
          main_file_name: 'helm_manager_aio.yaml'
          external_resource: false
          blueprint_archive: https://github.com/mateuszmizer/poc_dish/raw/main/submanager_helm_aio.zip
        deployment:
          inputs:
            k8s_deployment_id: { get_input: k8s_deployment_id }
    relationships:
      - type: cloudify.relationships.depends_on
        target: kubeconfig_storager

  aws_cli_installator:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint:
          main_file_name: 'aws_cli.yaml'
          external_resource: false
          blueprint_archive: https://github.com/mateuszmizer/poc_dish/raw/main/aws_cli_installator.zip
        deployment:
          inputs:
            cluster_host: { get_attribute: [ k8s, capabilities, kubernetes_cluster_host, value ] }
            cluster_name: { get_attribute: [ k8s, capabilities, kubernetes_cluster_name, value ] }
            region: { get_attribute: [ k8s, capabilities, region, value ] }
            rg_id: { get_attribute: [ k8s, capabilities, rg_id ] }
            aks_id: { get_attribute: [ k8s, capabilities, aks_id] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: submanager
    - type: cloudify.relationships.depends_on
      target: k8s

  policy_matcher:
    type: cloudify.nodes.Component
    properties:
      client:
        host: { get_attribute: [ submanager, capabilities, cloudify_manager_endpoint ] }
        username: admin
        password: admin
        tenant: default_tenant
        port: 80
        protocol: 'http'
      resource_config:
        blueprint:
          main_file_name: 'policy.yaml'
          external_resource: false
          blueprint_archive: https://github.com/mateuszmizer/poc_dish/raw/main/policy.zip
        deployment:
          inputs:
            cluster_host: { get_attribute: [ k8s, capabilities, kubernetes_cluster_host ] }
            cluster_name: { get_attribute: [ k8s, capabilities, kubernetes_cluster_name ] }
            region: { get_attribute: [ k8s, capabilities, region ] }
            rg_id: { get_attribute: [ k8s, capabilities, rg_id ] }
            aks_id: { get_attribute: [ k8s, capabilities, aks_id ] }
            # deployment_id: { get_input: submanager_deployment_id }
    relationships:
    - type: cloudify.relationships.depends_on
      target: aws_cli_installator
    - type: cloudify.relationships.depends_on
      target: nfd_feature
  
  labeler:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/labeler.py
          executor: central_deployment_agent
          inputs:
            deployment_id: { get_input: submanager_deployment_id }
            SLA_VALUE: { get_attribute: [ policy_matcher, capabilities, SLA_POLICY ] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: policy_matcher

capabilities:
  SLA:
    value: { get_attribute: [ policy_matcher, capabilities, SLA_POLICY ] }
