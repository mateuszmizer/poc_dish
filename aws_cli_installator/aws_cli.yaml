tosca_definitions_version: cloudify_dsl_1_3
imports:
  - https://cloudify.co/spec/cloudify/6.3.0/types.yaml

inputs:

  cluster_host:
    type: string

  cluster_name:
    type: string

  region:
    type: string

  rg_id:
    type: string
  
  aks_id:
    type: string
  
  manager_name:
    type: string
    default: cloudify-manager-aio

    
node_templates:
 
  k8s_context_set:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/set_k8s_context.py
          executor: central_deployment_agent
          inputs:
            cluster_host: { get_input: cluster_host }
            cluster_name: { get_input: cluster_name }
            region: { get_input: region }
            rg_id: { get_input: rg_id }
            aks_id: { get_input: aks_id }

  aws-cli:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/k8s_exec.sh
          inputs:
            process:
              env:
                # POD_NAME: { get_attribute: [ pod_name, capabilities, POD_NAME ] }
                # ENV_TYPE_VALUE: { get_attribute: [ k8s_context_set, ENV ] }
                MANAGER_NAME: { get_input: manager_name}
                # AWS_ACCESS_KEY_ID_VALUE: { get_secret: aws_access_key_id }
                # AWS_SECRET_ACCESS_KEY_VALUE: { get_secret: aws_secret_access_key }
                # AWS_DEFAULT_REGION_VALUE: { get_input: region }
                # AWS_CLUSTER_NAME_VALUE: { get_input: cluster_name }
                # AWS_REGION_VALUE: { get_input: region }
                # CLUSTER_VALUE: { get_input: cluster_name }
                
          executor: central_deployment_agent
    relationships:
    - type: cloudify.relationships.depends_on
      target: k8s_context_set
